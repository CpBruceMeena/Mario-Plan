{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProjects.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","clasName","style","fontSize","Notifications","notifications","classsName","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProjects","createProject","history","push","class","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70325c0a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className='right'>\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n    <button className='btn pink lighten-1 z-depth-0' onClick={props.signOut}>Log Out</button>\r\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n      {props.profile.initials}\r\n    </NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(()=>{\r\n        dispatch({type: 'LOGIN_SUCCESS'})\r\n    }).catch((err) => {\r\n        dispatch({type: \"LOGIN_ERROR\", err});\r\n    });\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return(dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(()=> {\r\n      dispatch({ type: 'SIGNUP_SUCCESS'})\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_FAILED', err})\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className='right'>\r\n      <li><NavLink to='/signup'>SignUp</NavLink></li>\r\n      <li><NavLink to='/signin'>Log In</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect} from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n\r\n  return (\r\n    <nav className='nav-wrapper grey darken-3'>\r\n      <div className='container'>\r\n        <Link to = \"/\" clasName='brand-logo' style={{fontSize:\"40px\"}}>Mario Plan</Link>\r\n      { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state)\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps)(Navbar);\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n\r\n    return(\r\n      <div className='section'>\r\n        <div className='card z-depth-0'>\r\n          <div classsName='card-content'>\r\n            <span className='card-title'>Notifications</span>\r\n          <ul className='notifications'>\r\n            {notifications && notifications.map(item => {\r\n                return (\r\n                  <li key = {item.id} >\r\n                    <span className='pink-text'>{item.user}</span>\r\n                    <span>{item.content}</span>\r\n                    <div className='grey-text note-date'>\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                </div>\r\n                  </li>\r\n                )\r\n            })}\r\n          </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return(\r\n    <div className ='card z-depth-0 project-summary'>\r\n      <div className = 'card-content grey-text text-darken-3'>\r\n        <span className='card-title'>{project.title}</span>\r\n      <p>Posted by {project.authorFirstName} {project.authorLastName }</p>\r\n    <p className = 'grey-text'> {moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n      <div className='project-list section'>\r\n        {projects && projects.map(project => {\r\n          return(\r\n            <Link to={'./project/' + project.id}>\r\n            <ProjectSummary project={project} key={project.id} />\r\n            </Link>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render(){\r\n    // console.log(this.props)\r\n    const { projects, auth, notifications } = this.props;\r\n\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return(\r\n      <div className='dashboard container'>\r\n        <div className='row'>\r\n          <div className='col s12 m6'>\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n          <div className='col s12 m5 offset-m1'></div>\r\n        <Notifications notifications = {notifications}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n    return {\r\n      projects: state.firestore.ordered.projects,\r\n      auth : state.firebase.auth,\r\n      notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n   ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from \"moment\"\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n\r\n  if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n  if(project){\r\n    return(\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className='card-title'>{ project.title }</span>\r\n          <p>{ project.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>\r\n                Posted by {project.authorFirstName} {project.authorLastName}\r\n              </div>\r\n              <div>\r\n                {moment(project.createdAt.toDate().toString()).calendar()}\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='container center'><p>Loading project...</p></div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return{\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\" }\r\n  ])\r\n)(ProjectDetails);\r\n"," import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component{\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.signIn(this.state);\r\n  }\r\n\r\n  render(){\r\n    const { authError, auth } = this.props;\r\n\r\n    if(auth.uid) return <Redirect to='/' />\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n          <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" id='email' onChange={this.handleChange} />\r\n           </div>\r\n          <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          <div className='red-text center'>\r\n            { authError ? <p>{authError}</p> : null }\r\n           </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n      authError: state.auth.authError,\r\n      auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component{\r\n\r\n state = {\r\n   email: '',\r\n   password: '',\r\n   firstName: '',\r\n   lastName: ''\r\n }\r\n\r\n handleChange = (e) => {\r\n   this.setState({\r\n     [e.target.id]: e.target.value\r\n   })\r\n }\r\n\r\n handleSubmit = (e) => {\r\n   e.preventDefault()\r\n   this.props.signUp(this.state)\r\n }\r\n\r\n render(){\r\n   const {auth, authError} = this.props;\r\n   if(auth.uid) return <Redirect to='/' />\r\n   return(\r\n     <div className=\"container\">\r\n       <form className=\"white\" onSubmit={this.handleSubmit}>\r\n         <h5 className='grey-text text-darken-3'>Sign Up!</h5>\r\n         <div className=\"input-field\">\r\n             <label htmlFor=\"email\">Email</label>\r\n             <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n         <div className=\"input-field\">\r\n             <label htmlFor=\"password\">Password</label>\r\n             <input type=\"password\" id='password' onChange={this.handleChange} />\r\n         </div>\r\n         <div className=\"input-field\">\r\n             <label htmlFor=\"firstName\">First Name</label>\r\n             <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n         <div className=\"input-field\">\r\n             <label htmlFor=\"lastName\">Last Name</label>\r\n             <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n         <div className=\"input-field\">\r\n           <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n         </div>\r\n         <div className='red-text center'>\r\n            {authError ? <p> {authError} </p> : null}\r\n         </div>\r\n       </form>\r\n     </div>\r\n   )\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProjects extends Component{\r\n state = {\r\n   title: '',\r\n   content: ''\r\n }\r\n\r\n handleChange = (e) => {\r\n   this.setState({\r\n     [e.target.id]: e.target.value\r\n   })\r\n }\r\n\r\n handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   // console.log(this.state);\r\n   this.props.createProject(this.state)\r\n   this.props.history.push('/')\r\n }\r\n\r\n render(){\r\n   const {auth} = this.props;\r\n   if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n   return(\r\n     <div className=\"container\">\r\n       <form className=\"white\" onSubmit={this.handleSubmit}>\r\n         <h5 className='grey-text text-darken-3'>Create New Project</h5>\r\n         <div className=\"input-field\">\r\n             <label htmlFor=\"title\">Title</label>\r\n             <input type=\"text\" id='title' onChange={this.handleChange} />\r\n          </div>\r\n         <div className=\"input-field\">\r\n             <label htmlFor=\"content\"> Project Content</label>\r\n             <textarea id='content' className='materialize-textarea'></textarea>\r\n         </div>\r\n         <div class=\"input-field\">\r\n           <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n         </div>\r\n       </form>\r\n     </div>\r\n   )\r\n }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProjects);\r\n","export const createProject = (project) => {\r\n\r\n   return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n     // making async call to database\r\n     const firestore = getFirestore();\r\n     const profile = getState().firebase.profile;\r\n     const authorId = getState().firebase.auth.uid;\r\n     firestore.collection('projects').add({\r\n       ...project,\r\n       authorFirstName: profile.firstName,\r\n       authorLastName: profile.lastName,\r\n       authorId: authorId,\r\n       createdAt: new Date()\r\n     }).then(() => {\r\n       dispatch({ type: 'CREATE_PROJECT', project });\r\n     }).catch((err) => {\r\n        dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n     })\r\n   }\r\n};\r\n","import React, {Component} from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProjects from './components/projects/CreateProjects'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/project/:id' component={ProjectDetails} />\n          <Route path = '/signin' component ={SignIn} />\n          <Route path = '/signup' component ={SignUp} />\n          <Route path = '/create' component ={CreateProjects} />\n        </Switch>\n        </div>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case \"LOGIN_ERROR\":\r\n      console.log('login failed');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return{\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('Signout Success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log(\"Signup success\")\r\n      return{\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_FAILED':\r\n      console.log('Signup failed')\r\n      return{\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state;\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","const initState = {\r\n   projects: [\r\n     {id: '1', title: \"collect all the star\", content: \"random random random\"},\r\n     {id: \"2\", title: \"help me find peach\", content: \"random random random\"},\r\n     {id: \"3\", title: \"Yo Boy!!\", content: \"random random random\"}\r\n   ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers} from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default (rootReducer);\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyC8B0MuhQzkza8QlnJzcGF9qGemnE7U0V0\",\r\n    authDomain: \"mario-plan-d1528.firebaseapp.com\",\r\n    databaseURL: \"https://mario-plan-d1528.firebaseio.com\",\r\n    projectId: \"mario-plan-d1528\",\r\n    storageBucket: \"mario-plan-d1528.appspot.com\",\r\n    messagingSenderId: \"531750062965\",\r\n    appId: \"1:531750062965:web:f2a814424ddaba078be13c\",\r\n    measurementId: \"G-YQNJV5DCQ2\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {getFirestore, reduxFirestore } from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store =  createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reduxFirestore(fbConfig),\n      reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n)\n\nstore.firebaseAuthIsReady.then( () => {\n  ReactDOM.render(\n    <Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n"],"sourceRoot":""}